
spi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000062e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000682  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000682  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  000006f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c17  00000000  00000000  00000798  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000075e  00000000  00000000  000013af  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000063e  00000000  00000000  00001b0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000144  00000000  00000000  0000214c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b2  00000000  00000000  00002290  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000600  00000000  00000000  00002642  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00002c42  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 36 00 	jmp	0x6c	; 0x6c <__vector_13>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 a9 00 	call	0x152	; 0x152 <main>
  64:	0c 94 15 03 	jmp	0x62a	; 0x62a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <__vector_13>:
#include <avr/interrupt.h>
#include <avr/io.h>
#include "spi.h"
#include "UART.h"
ISR(USART_RXC_vect)
{
  6c:	1f 92       	push	r1
  6e:	0f 92       	push	r0
  70:	0f b6       	in	r0, 0x3f	; 63
  72:	0f 92       	push	r0
  74:	11 24       	eor	r1, r1
  76:	2f 93       	push	r18
  78:	3f 93       	push	r19
  7a:	4f 93       	push	r20
  7c:	5f 93       	push	r21
  7e:	6f 93       	push	r22
  80:	7f 93       	push	r23
  82:	8f 93       	push	r24
  84:	9f 93       	push	r25
  86:	af 93       	push	r26
  88:	bf 93       	push	r27
  8a:	ef 93       	push	r30
  8c:	ff 93       	push	r31
	char data = UDR;
  8e:	8c b1       	in	r24, 0x0c	; 12
	if (data == 'a')
  90:	81 36       	cpi	r24, 0x61	; 97
  92:	c9 f4       	brne	.+50     	; 0xc6 <__vector_13+0x5a>
	{ 
		PORTC|=(1<<0);
  94:	85 b3       	in	r24, 0x15	; 21
  96:	81 60       	ori	r24, 0x01	; 1
  98:	85 bb       	out	0x15, r24	; 21
		PORTC&=~((1<<1)|(1<<2));
  9a:	85 b3       	in	r24, 0x15	; 21
  9c:	89 7f       	andi	r24, 0xF9	; 249
  9e:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a0:	8f e3       	ldi	r24, 0x3F	; 63
  a2:	9c e9       	ldi	r25, 0x9C	; 156
  a4:	01 97       	sbiw	r24, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <__vector_13+0x38>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <__vector_13+0x3e>
  aa:	00 00       	nop
		_delay_ms(10);
		transmiter('a');
  ac:	81 e6       	ldi	r24, 0x61	; 97
  ae:	0e 94 38 01 	call	0x270	; 0x270 <transmiter>
  b2:	9f ef       	ldi	r25, 0xFF	; 255
  b4:	20 e7       	ldi	r18, 0x70	; 112
  b6:	82 e0       	ldi	r24, 0x02	; 2
  b8:	91 50       	subi	r25, 0x01	; 1
  ba:	20 40       	sbci	r18, 0x00	; 0
  bc:	80 40       	sbci	r24, 0x00	; 0
  be:	e1 f7       	brne	.-8      	; 0xb8 <__vector_13+0x4c>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <__vector_13+0x56>
  c2:	00 00       	nop
  c4:	35 c0       	rjmp	.+106    	; 0x130 <__vector_13+0xc4>
		_delay_ms(50);
		
	}
	else if (data=='b')
  c6:	82 36       	cpi	r24, 0x62	; 98
  c8:	c9 f4       	brne	.+50     	; 0xfc <__vector_13+0x90>
	{
		PORTC|=(1<<1);
  ca:	85 b3       	in	r24, 0x15	; 21
  cc:	82 60       	ori	r24, 0x02	; 2
  ce:	85 bb       	out	0x15, r24	; 21
		PORTC&=~((1<<0)|(1<<2));
  d0:	85 b3       	in	r24, 0x15	; 21
  d2:	8a 7f       	andi	r24, 0xFA	; 250
  d4:	85 bb       	out	0x15, r24	; 21
  d6:	8f e3       	ldi	r24, 0x3F	; 63
  d8:	9c e9       	ldi	r25, 0x9C	; 156
  da:	01 97       	sbiw	r24, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <__vector_13+0x6e>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <__vector_13+0x74>
  e0:	00 00       	nop
		_delay_ms(10);
		transmiter('b');
  e2:	82 e6       	ldi	r24, 0x62	; 98
  e4:	0e 94 38 01 	call	0x270	; 0x270 <transmiter>
  e8:	9f ef       	ldi	r25, 0xFF	; 255
  ea:	20 e7       	ldi	r18, 0x70	; 112
  ec:	82 e0       	ldi	r24, 0x02	; 2
  ee:	91 50       	subi	r25, 0x01	; 1
  f0:	20 40       	sbci	r18, 0x00	; 0
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <__vector_13+0x82>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <__vector_13+0x8c>
  f8:	00 00       	nop
  fa:	1a c0       	rjmp	.+52     	; 0x130 <__vector_13+0xc4>
		_delay_ms(50);
	}
	else if (data=='c')
  fc:	83 36       	cpi	r24, 0x63	; 99
  fe:	c1 f4       	brne	.+48     	; 0x130 <__vector_13+0xc4>
	{
		PORTC|=(1<<2);
 100:	85 b3       	in	r24, 0x15	; 21
 102:	84 60       	ori	r24, 0x04	; 4
 104:	85 bb       	out	0x15, r24	; 21
		PORTC&=~((1<<0)|(1<<1));
 106:	85 b3       	in	r24, 0x15	; 21
 108:	8c 7f       	andi	r24, 0xFC	; 252
 10a:	85 bb       	out	0x15, r24	; 21
 10c:	8f e3       	ldi	r24, 0x3F	; 63
 10e:	9c e9       	ldi	r25, 0x9C	; 156
 110:	01 97       	sbiw	r24, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <__vector_13+0xa4>
 114:	00 c0       	rjmp	.+0      	; 0x116 <__vector_13+0xaa>
 116:	00 00       	nop
		_delay_ms(10);
		transmiter('c');
 118:	83 e6       	ldi	r24, 0x63	; 99
 11a:	0e 94 38 01 	call	0x270	; 0x270 <transmiter>
 11e:	9f ef       	ldi	r25, 0xFF	; 255
 120:	20 e7       	ldi	r18, 0x70	; 112
 122:	82 e0       	ldi	r24, 0x02	; 2
 124:	91 50       	subi	r25, 0x01	; 1
 126:	20 40       	sbci	r18, 0x00	; 0
 128:	80 40       	sbci	r24, 0x00	; 0
 12a:	e1 f7       	brne	.-8      	; 0x124 <__vector_13+0xb8>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <__vector_13+0xc2>
 12e:	00 00       	nop
		_delay_ms(50); 
	}
}
 130:	ff 91       	pop	r31
 132:	ef 91       	pop	r30
 134:	bf 91       	pop	r27
 136:	af 91       	pop	r26
 138:	9f 91       	pop	r25
 13a:	8f 91       	pop	r24
 13c:	7f 91       	pop	r23
 13e:	6f 91       	pop	r22
 140:	5f 91       	pop	r21
 142:	4f 91       	pop	r20
 144:	3f 91       	pop	r19
 146:	2f 91       	pop	r18
 148:	0f 90       	pop	r0
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	0f 90       	pop	r0
 14e:	1f 90       	pop	r1
 150:	18 95       	reti

00000152 <main>:


int main(void)
{
	initial_spi(3,1);
 152:	61 e0       	ldi	r22, 0x01	; 1
 154:	83 e0       	ldi	r24, 0x03	; 3
 156:	0e 94 3c 01 	call	0x278	; 0x278 <initial_spi>
	initial_receiver (9600);
 15a:	80 e8       	ldi	r24, 0x80	; 128
 15c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <initial_receiver>
	DDRA&=~((1<<7)|(1<<6)|(1<<5));
 160:	8a b3       	in	r24, 0x1a	; 26
 162:	8f 71       	andi	r24, 0x1F	; 31
 164:	8a bb       	out	0x1a, r24	; 26
	DDRC|=(1<<0)|(1<<1)|(1<<2);
 166:	84 b3       	in	r24, 0x14	; 20
 168:	87 60       	ori	r24, 0x07	; 7
 16a:	84 bb       	out	0x14, r24	; 20
  
  sei();
 16c:	78 94       	sei
    while (1) 
    {
		if (PINA&(1<<7))
 16e:	cf 9b       	sbis	0x19, 7	; 25
 170:	13 c0       	rjmp	.+38     	; 0x198 <main+0x46>
 172:	8f e3       	ldi	r24, 0x3F	; 63
 174:	9c e9       	ldi	r25, 0x9C	; 156
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <main+0x24>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <main+0x2a>
 17c:	00 00       	nop
		{
			_delay_ms(10);
			transmiter('a');
 17e:	81 e6       	ldi	r24, 0x61	; 97
 180:	0e 94 38 01 	call	0x270	; 0x270 <transmiter>
 184:	9f ef       	ldi	r25, 0xFF	; 255
 186:	20 e7       	ldi	r18, 0x70	; 112
 188:	82 e0       	ldi	r24, 0x02	; 2
 18a:	91 50       	subi	r25, 0x01	; 1
 18c:	20 40       	sbci	r18, 0x00	; 0
 18e:	80 40       	sbci	r24, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <main+0x38>
 192:	00 c0       	rjmp	.+0      	; 0x194 <main+0x42>
 194:	00 00       	nop
 196:	eb cf       	rjmp	.-42     	; 0x16e <main+0x1c>
			_delay_ms(50);
		}
		else if (PINA&(1<<6))
 198:	ce 9b       	sbis	0x19, 6	; 25
 19a:	13 c0       	rjmp	.+38     	; 0x1c2 <main+0x70>
 19c:	8f e3       	ldi	r24, 0x3F	; 63
 19e:	9c e9       	ldi	r25, 0x9C	; 156
 1a0:	01 97       	sbiw	r24, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <main+0x4e>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <main+0x54>
 1a6:	00 00       	nop
		{
			_delay_ms(10);
			transmiter('b');
 1a8:	82 e6       	ldi	r24, 0x62	; 98
 1aa:	0e 94 38 01 	call	0x270	; 0x270 <transmiter>
 1ae:	9f ef       	ldi	r25, 0xFF	; 255
 1b0:	20 e7       	ldi	r18, 0x70	; 112
 1b2:	82 e0       	ldi	r24, 0x02	; 2
 1b4:	91 50       	subi	r25, 0x01	; 1
 1b6:	20 40       	sbci	r18, 0x00	; 0
 1b8:	80 40       	sbci	r24, 0x00	; 0
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <main+0x62>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <main+0x6c>
 1be:	00 00       	nop
 1c0:	d6 cf       	rjmp	.-84     	; 0x16e <main+0x1c>
			_delay_ms(50);
		}
		else if (PINA&(1<<5))
 1c2:	cd 9b       	sbis	0x19, 5	; 25
 1c4:	d4 cf       	rjmp	.-88     	; 0x16e <main+0x1c>
 1c6:	8f e3       	ldi	r24, 0x3F	; 63
 1c8:	9c e9       	ldi	r25, 0x9C	; 156
 1ca:	01 97       	sbiw	r24, 0x01	; 1
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <main+0x78>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0x7e>
 1d0:	00 00       	nop
		{
			_delay_ms(10);
			transmiter('c');
 1d2:	83 e6       	ldi	r24, 0x63	; 99
 1d4:	0e 94 38 01 	call	0x270	; 0x270 <transmiter>
 1d8:	9f ef       	ldi	r25, 0xFF	; 255
 1da:	20 e7       	ldi	r18, 0x70	; 112
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	91 50       	subi	r25, 0x01	; 1
 1e0:	20 40       	sbci	r18, 0x00	; 0
 1e2:	80 40       	sbci	r24, 0x00	; 0
 1e4:	e1 f7       	brne	.-8      	; 0x1de <main+0x8c>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <main+0x96>
 1e8:	00 00       	nop
 1ea:	c1 cf       	rjmp	.-126    	; 0x16e <main+0x1c>

000001ec <SCK_Frequency>:
	while(!(SPSR&(1<<SPIF)));
}
void recive(void)
{
	DDRB|=(1<<6);
	SPCR|=(1<<SPIE); // ENABLE INTERRUPT
 1ec:	81 11       	cpse	r24, r1
 1ee:	04 c0       	rjmp	.+8      	; 0x1f8 <SCK_Frequency+0xc>
 1f0:	8d b1       	in	r24, 0x0d	; 13
 1f2:	8c 7f       	andi	r24, 0xFC	; 252
 1f4:	8d b9       	out	0x0d, r24	; 13
 1f6:	08 95       	ret
 1f8:	81 30       	cpi	r24, 0x01	; 1
 1fa:	39 f4       	brne	.+14     	; 0x20a <SCK_Frequency+0x1e>
 1fc:	8d b1       	in	r24, 0x0d	; 13
 1fe:	8c 7f       	andi	r24, 0xFC	; 252
 200:	8d b9       	out	0x0d, r24	; 13
 202:	8d b1       	in	r24, 0x0d	; 13
 204:	81 60       	ori	r24, 0x01	; 1
 206:	8d b9       	out	0x0d, r24	; 13
 208:	08 95       	ret
 20a:	82 30       	cpi	r24, 0x02	; 2
 20c:	39 f4       	brne	.+14     	; 0x21c <SCK_Frequency+0x30>
 20e:	8d b1       	in	r24, 0x0d	; 13
 210:	8e 7f       	andi	r24, 0xFE	; 254
 212:	8d b9       	out	0x0d, r24	; 13
 214:	8d b1       	in	r24, 0x0d	; 13
 216:	82 60       	ori	r24, 0x02	; 2
 218:	8d b9       	out	0x0d, r24	; 13
 21a:	08 95       	ret
 21c:	83 30       	cpi	r24, 0x03	; 3
 21e:	39 f4       	brne	.+14     	; 0x22e <SCK_Frequency+0x42>
 220:	8d b1       	in	r24, 0x0d	; 13
 222:	8e 7f       	andi	r24, 0xFE	; 254
 224:	8d b9       	out	0x0d, r24	; 13
 226:	8d b1       	in	r24, 0x0d	; 13
 228:	83 60       	ori	r24, 0x03	; 3
 22a:	8d b9       	out	0x0d, r24	; 13
 22c:	08 95       	ret
 22e:	84 30       	cpi	r24, 0x04	; 4
 230:	39 f4       	brne	.+14     	; 0x240 <SCK_Frequency+0x54>
 232:	8d b1       	in	r24, 0x0d	; 13
 234:	81 60       	ori	r24, 0x01	; 1
 236:	8d b9       	out	0x0d, r24	; 13
 238:	8d b1       	in	r24, 0x0d	; 13
 23a:	8c 7f       	andi	r24, 0xFC	; 252
 23c:	8d b9       	out	0x0d, r24	; 13
 23e:	08 95       	ret
 240:	85 30       	cpi	r24, 0x05	; 5
 242:	39 f4       	brne	.+14     	; 0x252 <SCK_Frequency+0x66>
 244:	8d b1       	in	r24, 0x0d	; 13
 246:	81 60       	ori	r24, 0x01	; 1
 248:	8d b9       	out	0x0d, r24	; 13
 24a:	8d b1       	in	r24, 0x0d	; 13
 24c:	8d 7f       	andi	r24, 0xFD	; 253
 24e:	8d b9       	out	0x0d, r24	; 13
 250:	08 95       	ret
 252:	86 30       	cpi	r24, 0x06	; 6
 254:	39 f4       	brne	.+14     	; 0x264 <SCK_Frequency+0x78>
 256:	8d b1       	in	r24, 0x0d	; 13
 258:	83 60       	ori	r24, 0x03	; 3
 25a:	8d b9       	out	0x0d, r24	; 13
 25c:	8d b1       	in	r24, 0x0d	; 13
 25e:	8e 7f       	andi	r24, 0xFE	; 254
 260:	8d b9       	out	0x0d, r24	; 13
 262:	08 95       	ret
 264:	87 30       	cpi	r24, 0x07	; 7
 266:	19 f4       	brne	.+6      	; 0x26e <SCK_Frequency+0x82>
 268:	8d b1       	in	r24, 0x0d	; 13
 26a:	83 60       	ori	r24, 0x03	; 3
 26c:	8d b9       	out	0x0d, r24	; 13
 26e:	08 95       	ret

00000270 <transmiter>:
 270:	8f b9       	out	0x0f, r24	; 15
 272:	77 9b       	sbis	0x0e, 7	; 14
 274:	fe cf       	rjmp	.-4      	; 0x272 <transmiter+0x2>
 276:	08 95       	ret

00000278 <initial_spi>:
}
void initial_spi(char CLOCK,char send)
{
	DDRB|=(1<<4)|(1<<5)|(1<<7);
 278:	97 b3       	in	r25, 0x17	; 23
 27a:	90 6b       	ori	r25, 0xB0	; 176
 27c:	97 bb       	out	0x17, r25	; 23
	SCK_Frequency(CLOCK);
 27e:	0e 94 f6 00 	call	0x1ec	; 0x1ec <SCK_Frequency>
	SPCR|=(1<<MSTR);//MASTER
 282:	8d b1       	in	r24, 0x0d	; 13
 284:	80 61       	ori	r24, 0x10	; 16
 286:	8d b9       	out	0x0d, r24	; 13
	SPCR|=(1<<SPE);
 288:	8d b1       	in	r24, 0x0d	; 13
 28a:	80 64       	ori	r24, 0x40	; 64
 28c:	8d b9       	out	0x0d, r24	; 13
 28e:	08 95       	ret

00000290 <Baud_Rate>:
void initial_TRANSMIT (unsigned char buad)
{
	// enable transmiter
	UCSRB|=(1<<TXEN);
	//BUAD RATE
	Baud_Rate( buad);
 290:	68 2f       	mov	r22, r24
 292:	70 e0       	ldi	r23, 0x00	; 0
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 89 02 	call	0x512	; 0x512 <__floatsisf>
 29c:	9b 01       	movw	r18, r22
 29e:	ac 01       	movw	r20, r24
 2a0:	60 e0       	ldi	r22, 0x00	; 0
 2a2:	70 e0       	ldi	r23, 0x00	; 0
 2a4:	80 e8       	ldi	r24, 0x80	; 128
 2a6:	91 e4       	ldi	r25, 0x41	; 65
 2a8:	0e 94 df 01 	call	0x3be	; 0x3be <__divsf3>
 2ac:	9b 01       	movw	r18, r22
 2ae:	ac 01       	movw	r20, r24
 2b0:	60 e0       	ldi	r22, 0x00	; 0
 2b2:	74 e2       	ldi	r23, 0x24	; 36
 2b4:	84 e7       	ldi	r24, 0x74	; 116
 2b6:	9b e4       	ldi	r25, 0x4B	; 75
 2b8:	0e 94 df 01 	call	0x3be	; 0x3be <__divsf3>
 2bc:	20 e0       	ldi	r18, 0x00	; 0
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	40 e8       	ldi	r20, 0x80	; 128
 2c2:	5f e3       	ldi	r21, 0x3F	; 63
 2c4:	0e 94 72 01 	call	0x2e4	; 0x2e4 <__subsf3>
 2c8:	0e 94 51 02 	call	0x4a2	; 0x4a2 <__fixsfsi>
 2cc:	69 b9       	out	0x09, r22	; 9
 2ce:	70 bd       	out	0x20, r23	; 32
 2d0:	08 95       	ret

000002d2 <initial_receiver>:
	
}
void initial_receiver (unsigned char buad)
{
	// enable receiver
	UCSRB|=(1<<RXEN);
 2d2:	9a b1       	in	r25, 0x0a	; 10
 2d4:	90 61       	ori	r25, 0x10	; 16
 2d6:	9a b9       	out	0x0a, r25	; 10
	//BUAD RATE
	Baud_Rate( buad);
 2d8:	0e 94 48 01 	call	0x290	; 0x290 <Baud_Rate>
	// enable receiver interrupt 
	UCSRB|=(1<<RXCIE);
 2dc:	8a b1       	in	r24, 0x0a	; 10
 2de:	80 68       	ori	r24, 0x80	; 128
 2e0:	8a b9       	out	0x0a, r24	; 10
 2e2:	08 95       	ret

000002e4 <__subsf3>:
 2e4:	50 58       	subi	r21, 0x80	; 128

000002e6 <__addsf3>:
 2e6:	bb 27       	eor	r27, r27
 2e8:	aa 27       	eor	r26, r26
 2ea:	0e 94 8a 01 	call	0x314	; 0x314 <__addsf3x>
 2ee:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <__fp_round>
 2f2:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_pscA>
 2f6:	38 f0       	brcs	.+14     	; 0x306 <__addsf3+0x20>
 2f8:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_pscB>
 2fc:	20 f0       	brcs	.+8      	; 0x306 <__addsf3+0x20>
 2fe:	39 f4       	brne	.+14     	; 0x30e <__addsf3+0x28>
 300:	9f 3f       	cpi	r25, 0xFF	; 255
 302:	19 f4       	brne	.+6      	; 0x30a <__addsf3+0x24>
 304:	26 f4       	brtc	.+8      	; 0x30e <__addsf3+0x28>
 306:	0c 94 ca 02 	jmp	0x594	; 0x594 <__fp_nan>
 30a:	0e f4       	brtc	.+2      	; 0x30e <__addsf3+0x28>
 30c:	e0 95       	com	r30
 30e:	e7 fb       	bst	r30, 7
 310:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_inf>

00000314 <__addsf3x>:
 314:	e9 2f       	mov	r30, r25
 316:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__fp_split3>
 31a:	58 f3       	brcs	.-42     	; 0x2f2 <__addsf3+0xc>
 31c:	ba 17       	cp	r27, r26
 31e:	62 07       	cpc	r22, r18
 320:	73 07       	cpc	r23, r19
 322:	84 07       	cpc	r24, r20
 324:	95 07       	cpc	r25, r21
 326:	20 f0       	brcs	.+8      	; 0x330 <__addsf3x+0x1c>
 328:	79 f4       	brne	.+30     	; 0x348 <__addsf3x+0x34>
 32a:	a6 f5       	brtc	.+104    	; 0x394 <__addsf3x+0x80>
 32c:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__fp_zero>
 330:	0e f4       	brtc	.+2      	; 0x334 <__addsf3x+0x20>
 332:	e0 95       	com	r30
 334:	0b 2e       	mov	r0, r27
 336:	ba 2f       	mov	r27, r26
 338:	a0 2d       	mov	r26, r0
 33a:	0b 01       	movw	r0, r22
 33c:	b9 01       	movw	r22, r18
 33e:	90 01       	movw	r18, r0
 340:	0c 01       	movw	r0, r24
 342:	ca 01       	movw	r24, r20
 344:	a0 01       	movw	r20, r0
 346:	11 24       	eor	r1, r1
 348:	ff 27       	eor	r31, r31
 34a:	59 1b       	sub	r21, r25
 34c:	99 f0       	breq	.+38     	; 0x374 <__addsf3x+0x60>
 34e:	59 3f       	cpi	r21, 0xF9	; 249
 350:	50 f4       	brcc	.+20     	; 0x366 <__addsf3x+0x52>
 352:	50 3e       	cpi	r21, 0xE0	; 224
 354:	68 f1       	brcs	.+90     	; 0x3b0 <__addsf3x+0x9c>
 356:	1a 16       	cp	r1, r26
 358:	f0 40       	sbci	r31, 0x00	; 0
 35a:	a2 2f       	mov	r26, r18
 35c:	23 2f       	mov	r18, r19
 35e:	34 2f       	mov	r19, r20
 360:	44 27       	eor	r20, r20
 362:	58 5f       	subi	r21, 0xF8	; 248
 364:	f3 cf       	rjmp	.-26     	; 0x34c <__addsf3x+0x38>
 366:	46 95       	lsr	r20
 368:	37 95       	ror	r19
 36a:	27 95       	ror	r18
 36c:	a7 95       	ror	r26
 36e:	f0 40       	sbci	r31, 0x00	; 0
 370:	53 95       	inc	r21
 372:	c9 f7       	brne	.-14     	; 0x366 <__addsf3x+0x52>
 374:	7e f4       	brtc	.+30     	; 0x394 <__addsf3x+0x80>
 376:	1f 16       	cp	r1, r31
 378:	ba 0b       	sbc	r27, r26
 37a:	62 0b       	sbc	r22, r18
 37c:	73 0b       	sbc	r23, r19
 37e:	84 0b       	sbc	r24, r20
 380:	ba f0       	brmi	.+46     	; 0x3b0 <__addsf3x+0x9c>
 382:	91 50       	subi	r25, 0x01	; 1
 384:	a1 f0       	breq	.+40     	; 0x3ae <__addsf3x+0x9a>
 386:	ff 0f       	add	r31, r31
 388:	bb 1f       	adc	r27, r27
 38a:	66 1f       	adc	r22, r22
 38c:	77 1f       	adc	r23, r23
 38e:	88 1f       	adc	r24, r24
 390:	c2 f7       	brpl	.-16     	; 0x382 <__addsf3x+0x6e>
 392:	0e c0       	rjmp	.+28     	; 0x3b0 <__addsf3x+0x9c>
 394:	ba 0f       	add	r27, r26
 396:	62 1f       	adc	r22, r18
 398:	73 1f       	adc	r23, r19
 39a:	84 1f       	adc	r24, r20
 39c:	48 f4       	brcc	.+18     	; 0x3b0 <__addsf3x+0x9c>
 39e:	87 95       	ror	r24
 3a0:	77 95       	ror	r23
 3a2:	67 95       	ror	r22
 3a4:	b7 95       	ror	r27
 3a6:	f7 95       	ror	r31
 3a8:	9e 3f       	cpi	r25, 0xFE	; 254
 3aa:	08 f0       	brcs	.+2      	; 0x3ae <__addsf3x+0x9a>
 3ac:	b0 cf       	rjmp	.-160    	; 0x30e <__addsf3+0x28>
 3ae:	93 95       	inc	r25
 3b0:	88 0f       	add	r24, r24
 3b2:	08 f0       	brcs	.+2      	; 0x3b6 <__addsf3x+0xa2>
 3b4:	99 27       	eor	r25, r25
 3b6:	ee 0f       	add	r30, r30
 3b8:	97 95       	ror	r25
 3ba:	87 95       	ror	r24
 3bc:	08 95       	ret

000003be <__divsf3>:
 3be:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__divsf3x>
 3c2:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <__fp_round>
 3c6:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_pscB>
 3ca:	58 f0       	brcs	.+22     	; 0x3e2 <__divsf3+0x24>
 3cc:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_pscA>
 3d0:	40 f0       	brcs	.+16     	; 0x3e2 <__divsf3+0x24>
 3d2:	29 f4       	brne	.+10     	; 0x3de <__divsf3+0x20>
 3d4:	5f 3f       	cpi	r21, 0xFF	; 255
 3d6:	29 f0       	breq	.+10     	; 0x3e2 <__divsf3+0x24>
 3d8:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_inf>
 3dc:	51 11       	cpse	r21, r1
 3de:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_szero>
 3e2:	0c 94 ca 02 	jmp	0x594	; 0x594 <__fp_nan>

000003e6 <__divsf3x>:
 3e6:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__fp_split3>
 3ea:	68 f3       	brcs	.-38     	; 0x3c6 <__divsf3+0x8>

000003ec <__divsf3_pse>:
 3ec:	99 23       	and	r25, r25
 3ee:	b1 f3       	breq	.-20     	; 0x3dc <__divsf3+0x1e>
 3f0:	55 23       	and	r21, r21
 3f2:	91 f3       	breq	.-28     	; 0x3d8 <__divsf3+0x1a>
 3f4:	95 1b       	sub	r25, r21
 3f6:	55 0b       	sbc	r21, r21
 3f8:	bb 27       	eor	r27, r27
 3fa:	aa 27       	eor	r26, r26
 3fc:	62 17       	cp	r22, r18
 3fe:	73 07       	cpc	r23, r19
 400:	84 07       	cpc	r24, r20
 402:	38 f0       	brcs	.+14     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 404:	9f 5f       	subi	r25, 0xFF	; 255
 406:	5f 4f       	sbci	r21, 0xFF	; 255
 408:	22 0f       	add	r18, r18
 40a:	33 1f       	adc	r19, r19
 40c:	44 1f       	adc	r20, r20
 40e:	aa 1f       	adc	r26, r26
 410:	a9 f3       	breq	.-22     	; 0x3fc <__divsf3_pse+0x10>
 412:	35 d0       	rcall	.+106    	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 414:	0e 2e       	mov	r0, r30
 416:	3a f0       	brmi	.+14     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 418:	e0 e8       	ldi	r30, 0x80	; 128
 41a:	32 d0       	rcall	.+100    	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 41c:	91 50       	subi	r25, 0x01	; 1
 41e:	50 40       	sbci	r21, 0x00	; 0
 420:	e6 95       	lsr	r30
 422:	00 1c       	adc	r0, r0
 424:	ca f7       	brpl	.-14     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 426:	2b d0       	rcall	.+86     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 428:	fe 2f       	mov	r31, r30
 42a:	29 d0       	rcall	.+82     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 42c:	66 0f       	add	r22, r22
 42e:	77 1f       	adc	r23, r23
 430:	88 1f       	adc	r24, r24
 432:	bb 1f       	adc	r27, r27
 434:	26 17       	cp	r18, r22
 436:	37 07       	cpc	r19, r23
 438:	48 07       	cpc	r20, r24
 43a:	ab 07       	cpc	r26, r27
 43c:	b0 e8       	ldi	r27, 0x80	; 128
 43e:	09 f0       	breq	.+2      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 440:	bb 0b       	sbc	r27, r27
 442:	80 2d       	mov	r24, r0
 444:	bf 01       	movw	r22, r30
 446:	ff 27       	eor	r31, r31
 448:	93 58       	subi	r25, 0x83	; 131
 44a:	5f 4f       	sbci	r21, 0xFF	; 255
 44c:	3a f0       	brmi	.+14     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 44e:	9e 3f       	cpi	r25, 0xFE	; 254
 450:	51 05       	cpc	r21, r1
 452:	78 f0       	brcs	.+30     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 454:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_inf>
 458:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_szero>
 45c:	5f 3f       	cpi	r21, 0xFF	; 255
 45e:	e4 f3       	brlt	.-8      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 460:	98 3e       	cpi	r25, 0xE8	; 232
 462:	d4 f3       	brlt	.-12     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 464:	86 95       	lsr	r24
 466:	77 95       	ror	r23
 468:	67 95       	ror	r22
 46a:	b7 95       	ror	r27
 46c:	f7 95       	ror	r31
 46e:	9f 5f       	subi	r25, 0xFF	; 255
 470:	c9 f7       	brne	.-14     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 472:	88 0f       	add	r24, r24
 474:	91 1d       	adc	r25, r1
 476:	96 95       	lsr	r25
 478:	87 95       	ror	r24
 47a:	97 f9       	bld	r25, 7
 47c:	08 95       	ret
 47e:	e1 e0       	ldi	r30, 0x01	; 1
 480:	66 0f       	add	r22, r22
 482:	77 1f       	adc	r23, r23
 484:	88 1f       	adc	r24, r24
 486:	bb 1f       	adc	r27, r27
 488:	62 17       	cp	r22, r18
 48a:	73 07       	cpc	r23, r19
 48c:	84 07       	cpc	r24, r20
 48e:	ba 07       	cpc	r27, r26
 490:	20 f0       	brcs	.+8      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 492:	62 1b       	sub	r22, r18
 494:	73 0b       	sbc	r23, r19
 496:	84 0b       	sbc	r24, r20
 498:	ba 0b       	sbc	r27, r26
 49a:	ee 1f       	adc	r30, r30
 49c:	88 f7       	brcc	.-30     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 49e:	e0 95       	com	r30
 4a0:	08 95       	ret

000004a2 <__fixsfsi>:
 4a2:	0e 94 58 02 	call	0x4b0	; 0x4b0 <__fixunssfsi>
 4a6:	68 94       	set
 4a8:	b1 11       	cpse	r27, r1
 4aa:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_szero>
 4ae:	08 95       	ret

000004b0 <__fixunssfsi>:
 4b0:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <__fp_splitA>
 4b4:	88 f0       	brcs	.+34     	; 0x4d8 <__fixunssfsi+0x28>
 4b6:	9f 57       	subi	r25, 0x7F	; 127
 4b8:	98 f0       	brcs	.+38     	; 0x4e0 <__fixunssfsi+0x30>
 4ba:	b9 2f       	mov	r27, r25
 4bc:	99 27       	eor	r25, r25
 4be:	b7 51       	subi	r27, 0x17	; 23
 4c0:	b0 f0       	brcs	.+44     	; 0x4ee <__fixunssfsi+0x3e>
 4c2:	e1 f0       	breq	.+56     	; 0x4fc <__fixunssfsi+0x4c>
 4c4:	66 0f       	add	r22, r22
 4c6:	77 1f       	adc	r23, r23
 4c8:	88 1f       	adc	r24, r24
 4ca:	99 1f       	adc	r25, r25
 4cc:	1a f0       	brmi	.+6      	; 0x4d4 <__fixunssfsi+0x24>
 4ce:	ba 95       	dec	r27
 4d0:	c9 f7       	brne	.-14     	; 0x4c4 <__fixunssfsi+0x14>
 4d2:	14 c0       	rjmp	.+40     	; 0x4fc <__fixunssfsi+0x4c>
 4d4:	b1 30       	cpi	r27, 0x01	; 1
 4d6:	91 f0       	breq	.+36     	; 0x4fc <__fixunssfsi+0x4c>
 4d8:	0e 94 0e 03 	call	0x61c	; 0x61c <__fp_zero>
 4dc:	b1 e0       	ldi	r27, 0x01	; 1
 4de:	08 95       	ret
 4e0:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__fp_zero>
 4e4:	67 2f       	mov	r22, r23
 4e6:	78 2f       	mov	r23, r24
 4e8:	88 27       	eor	r24, r24
 4ea:	b8 5f       	subi	r27, 0xF8	; 248
 4ec:	39 f0       	breq	.+14     	; 0x4fc <__fixunssfsi+0x4c>
 4ee:	b9 3f       	cpi	r27, 0xF9	; 249
 4f0:	cc f3       	brlt	.-14     	; 0x4e4 <__fixunssfsi+0x34>
 4f2:	86 95       	lsr	r24
 4f4:	77 95       	ror	r23
 4f6:	67 95       	ror	r22
 4f8:	b3 95       	inc	r27
 4fa:	d9 f7       	brne	.-10     	; 0x4f2 <__fixunssfsi+0x42>
 4fc:	3e f4       	brtc	.+14     	; 0x50c <__fixunssfsi+0x5c>
 4fe:	90 95       	com	r25
 500:	80 95       	com	r24
 502:	70 95       	com	r23
 504:	61 95       	neg	r22
 506:	7f 4f       	sbci	r23, 0xFF	; 255
 508:	8f 4f       	sbci	r24, 0xFF	; 255
 50a:	9f 4f       	sbci	r25, 0xFF	; 255
 50c:	08 95       	ret

0000050e <__floatunsisf>:
 50e:	e8 94       	clt
 510:	09 c0       	rjmp	.+18     	; 0x524 <__floatsisf+0x12>

00000512 <__floatsisf>:
 512:	97 fb       	bst	r25, 7
 514:	3e f4       	brtc	.+14     	; 0x524 <__floatsisf+0x12>
 516:	90 95       	com	r25
 518:	80 95       	com	r24
 51a:	70 95       	com	r23
 51c:	61 95       	neg	r22
 51e:	7f 4f       	sbci	r23, 0xFF	; 255
 520:	8f 4f       	sbci	r24, 0xFF	; 255
 522:	9f 4f       	sbci	r25, 0xFF	; 255
 524:	99 23       	and	r25, r25
 526:	a9 f0       	breq	.+42     	; 0x552 <__floatsisf+0x40>
 528:	f9 2f       	mov	r31, r25
 52a:	96 e9       	ldi	r25, 0x96	; 150
 52c:	bb 27       	eor	r27, r27
 52e:	93 95       	inc	r25
 530:	f6 95       	lsr	r31
 532:	87 95       	ror	r24
 534:	77 95       	ror	r23
 536:	67 95       	ror	r22
 538:	b7 95       	ror	r27
 53a:	f1 11       	cpse	r31, r1
 53c:	f8 cf       	rjmp	.-16     	; 0x52e <__floatsisf+0x1c>
 53e:	fa f4       	brpl	.+62     	; 0x57e <__floatsisf+0x6c>
 540:	bb 0f       	add	r27, r27
 542:	11 f4       	brne	.+4      	; 0x548 <__floatsisf+0x36>
 544:	60 ff       	sbrs	r22, 0
 546:	1b c0       	rjmp	.+54     	; 0x57e <__floatsisf+0x6c>
 548:	6f 5f       	subi	r22, 0xFF	; 255
 54a:	7f 4f       	sbci	r23, 0xFF	; 255
 54c:	8f 4f       	sbci	r24, 0xFF	; 255
 54e:	9f 4f       	sbci	r25, 0xFF	; 255
 550:	16 c0       	rjmp	.+44     	; 0x57e <__floatsisf+0x6c>
 552:	88 23       	and	r24, r24
 554:	11 f0       	breq	.+4      	; 0x55a <__floatsisf+0x48>
 556:	96 e9       	ldi	r25, 0x96	; 150
 558:	11 c0       	rjmp	.+34     	; 0x57c <__floatsisf+0x6a>
 55a:	77 23       	and	r23, r23
 55c:	21 f0       	breq	.+8      	; 0x566 <__floatsisf+0x54>
 55e:	9e e8       	ldi	r25, 0x8E	; 142
 560:	87 2f       	mov	r24, r23
 562:	76 2f       	mov	r23, r22
 564:	05 c0       	rjmp	.+10     	; 0x570 <__floatsisf+0x5e>
 566:	66 23       	and	r22, r22
 568:	71 f0       	breq	.+28     	; 0x586 <__floatsisf+0x74>
 56a:	96 e8       	ldi	r25, 0x86	; 134
 56c:	86 2f       	mov	r24, r22
 56e:	70 e0       	ldi	r23, 0x00	; 0
 570:	60 e0       	ldi	r22, 0x00	; 0
 572:	2a f0       	brmi	.+10     	; 0x57e <__floatsisf+0x6c>
 574:	9a 95       	dec	r25
 576:	66 0f       	add	r22, r22
 578:	77 1f       	adc	r23, r23
 57a:	88 1f       	adc	r24, r24
 57c:	da f7       	brpl	.-10     	; 0x574 <__floatsisf+0x62>
 57e:	88 0f       	add	r24, r24
 580:	96 95       	lsr	r25
 582:	87 95       	ror	r24
 584:	97 f9       	bld	r25, 7
 586:	08 95       	ret

00000588 <__fp_inf>:
 588:	97 f9       	bld	r25, 7
 58a:	9f 67       	ori	r25, 0x7F	; 127
 58c:	80 e8       	ldi	r24, 0x80	; 128
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	60 e0       	ldi	r22, 0x00	; 0
 592:	08 95       	ret

00000594 <__fp_nan>:
 594:	9f ef       	ldi	r25, 0xFF	; 255
 596:	80 ec       	ldi	r24, 0xC0	; 192
 598:	08 95       	ret

0000059a <__fp_pscA>:
 59a:	00 24       	eor	r0, r0
 59c:	0a 94       	dec	r0
 59e:	16 16       	cp	r1, r22
 5a0:	17 06       	cpc	r1, r23
 5a2:	18 06       	cpc	r1, r24
 5a4:	09 06       	cpc	r0, r25
 5a6:	08 95       	ret

000005a8 <__fp_pscB>:
 5a8:	00 24       	eor	r0, r0
 5aa:	0a 94       	dec	r0
 5ac:	12 16       	cp	r1, r18
 5ae:	13 06       	cpc	r1, r19
 5b0:	14 06       	cpc	r1, r20
 5b2:	05 06       	cpc	r0, r21
 5b4:	08 95       	ret

000005b6 <__fp_round>:
 5b6:	09 2e       	mov	r0, r25
 5b8:	03 94       	inc	r0
 5ba:	00 0c       	add	r0, r0
 5bc:	11 f4       	brne	.+4      	; 0x5c2 <__fp_round+0xc>
 5be:	88 23       	and	r24, r24
 5c0:	52 f0       	brmi	.+20     	; 0x5d6 <__fp_round+0x20>
 5c2:	bb 0f       	add	r27, r27
 5c4:	40 f4       	brcc	.+16     	; 0x5d6 <__fp_round+0x20>
 5c6:	bf 2b       	or	r27, r31
 5c8:	11 f4       	brne	.+4      	; 0x5ce <__fp_round+0x18>
 5ca:	60 ff       	sbrs	r22, 0
 5cc:	04 c0       	rjmp	.+8      	; 0x5d6 <__fp_round+0x20>
 5ce:	6f 5f       	subi	r22, 0xFF	; 255
 5d0:	7f 4f       	sbci	r23, 0xFF	; 255
 5d2:	8f 4f       	sbci	r24, 0xFF	; 255
 5d4:	9f 4f       	sbci	r25, 0xFF	; 255
 5d6:	08 95       	ret

000005d8 <__fp_split3>:
 5d8:	57 fd       	sbrc	r21, 7
 5da:	90 58       	subi	r25, 0x80	; 128
 5dc:	44 0f       	add	r20, r20
 5de:	55 1f       	adc	r21, r21
 5e0:	59 f0       	breq	.+22     	; 0x5f8 <__fp_splitA+0x10>
 5e2:	5f 3f       	cpi	r21, 0xFF	; 255
 5e4:	71 f0       	breq	.+28     	; 0x602 <__fp_splitA+0x1a>
 5e6:	47 95       	ror	r20

000005e8 <__fp_splitA>:
 5e8:	88 0f       	add	r24, r24
 5ea:	97 fb       	bst	r25, 7
 5ec:	99 1f       	adc	r25, r25
 5ee:	61 f0       	breq	.+24     	; 0x608 <__fp_splitA+0x20>
 5f0:	9f 3f       	cpi	r25, 0xFF	; 255
 5f2:	79 f0       	breq	.+30     	; 0x612 <__fp_splitA+0x2a>
 5f4:	87 95       	ror	r24
 5f6:	08 95       	ret
 5f8:	12 16       	cp	r1, r18
 5fa:	13 06       	cpc	r1, r19
 5fc:	14 06       	cpc	r1, r20
 5fe:	55 1f       	adc	r21, r21
 600:	f2 cf       	rjmp	.-28     	; 0x5e6 <__fp_split3+0xe>
 602:	46 95       	lsr	r20
 604:	f1 df       	rcall	.-30     	; 0x5e8 <__fp_splitA>
 606:	08 c0       	rjmp	.+16     	; 0x618 <__fp_splitA+0x30>
 608:	16 16       	cp	r1, r22
 60a:	17 06       	cpc	r1, r23
 60c:	18 06       	cpc	r1, r24
 60e:	99 1f       	adc	r25, r25
 610:	f1 cf       	rjmp	.-30     	; 0x5f4 <__fp_splitA+0xc>
 612:	86 95       	lsr	r24
 614:	71 05       	cpc	r23, r1
 616:	61 05       	cpc	r22, r1
 618:	08 94       	sec
 61a:	08 95       	ret

0000061c <__fp_zero>:
 61c:	e8 94       	clt

0000061e <__fp_szero>:
 61e:	bb 27       	eor	r27, r27
 620:	66 27       	eor	r22, r22
 622:	77 27       	eor	r23, r23
 624:	cb 01       	movw	r24, r22
 626:	97 f9       	bld	r25, 7
 628:	08 95       	ret

0000062a <_exit>:
 62a:	f8 94       	cli

0000062c <__stop_program>:
 62c:	ff cf       	rjmp	.-2      	; 0x62c <__stop_program>
